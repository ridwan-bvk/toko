1. php artisan make:migration cretate_products_table
 - compact(['subjudul']
2.php artisan make:controller ProductController
3.php artisan make:model Product
4.419 expired ga da @csrf token\
5. insert ke db products::create($request->all());
6.Add [_token] to fillable , artinya di model ditambahkan  protected $fillable = ['name','description','price']; atau
  protected $guarded = ['id']//selain kolom ini berari filable
7. @method('PUT'); untuk menambah edit
cara update laravel
 public function update(Request $request,$id){
        $product = product::find($id);
        $product->update($request->all() ); //caraupdate laravel
        return view('products.edit',compact(['product']));
        return redirect('/products');
    }
8. metode Delete diroutenya:
	ROute::Delete('/products/{id}',[ProductController::class,'destroy']);//delete
	tambahkan @method('DELETE'): contoh di form :
                    <form action="/products/{{ $product->id }}" method="POST">
                        @method('DELETE')
                        @csrf
                        <input type="submit" value="delete">
                    </form>
9. resfull API
	.-untuk API gunakan route-API.php, dan pengisian nya sama seperti routes yg di web.php
	.-buat cotroller baru untuk API
	.-untuk Api pemanggilannya gunakan /api
	.-dan biasanya return nya menggunakan return response()->json(['message'=>'succes', 'data'=>'tes']);
	.-$products = Product::all();
        return response()->json(['message'=>'succes', 'data'=>$products]);
	.-untuk metod get bisa dg url untuk api,tp untuk method post haru menggunakan postman
10. gunakan postman untuk memanggil url yg dibuat di api.php
11. untuk api post itu hanya bisa ditest di posman dg mengirimkan data form seperti dg form requestnya,
untuk formnya ada di body di postman
12. untuk update itu menggunakan metode put dan cara testing di postman nya gunakan body pilih row dan pilih j-son